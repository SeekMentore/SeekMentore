<?xml version="1.0" encoding="UTF-8"?>
<queryMapper namespace="sales-tutormapper">
	<query type="select" id="selectTutorMapper">
		SELECT
			TM.*,
			C.CUSTOMER_SERIAL_ID AS CUSTOMER_SERIAL_ID,
			C.NAME AS CUSTOMER_NAME, 
			SCE.EMAIL_ID AS CUSTOMER_EMAIL,
			SCC.CONTACT_NUMBER AS CUSTOMER_CONTACT_NUMBER,
			EN.SUBJECT AS ENQUIRY_SUBJECT,
			EN.GRADE AS ENQUIRY_GRADE,
			EN.LOCATION_DETAILS AS ENQUIRY_LOCATION,
			EN.ADDRESS_DETAILS AS ENQUIRY_ADDRESS_DETAILS,
			EN.ADDITIONAL_DETAILS AS ENQUIRY_ADDITIONAL_DETAILS,
			EN.PREFERRED_TEACHING_TYPE AS ENQUIRY_PREFERRED_TEACHING_TYPE,
			EN.QUOTED_CLIENT_RATE AS ENQUIRY_QUOTED_CLIENT_RATE,
			EN.NEGOTIATED_RATE_WITH_CLIENT AS ENQUIRY_NEGOTIATED_RATE_WITH_CLIENT,
			EN.CLIENT_NEGOTIATION_REMARKS AS ENQUIRY_CLIENT_NEGOTIATION_REMARKS,
			EN.ENQUIRY_EMAIL AS ENQUIRY_EMAIL,
			EN.ENQUIRY_CONTACT_NUMBER AS ENQUIRY_CONTACT_NUMBER,
			T.NAME AS TUTOR_NAME,
			RTE.EMAIL_ID AS TUTOR_EMAIL,
			RTC.CONTACT_NUMBER AS TUTOR_CONTACT_NUMBER,
			IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = TM.WHO_ACTED), TM.WHO_ACTED) AS WHO_ACTED_NAME
		FROM TUTOR_MAPPER TM
		INNER JOIN REGISTERED_TUTOR T ON TM.TUTOR_SERIAL_ID = T.TUTOR_SERIAL_ID
		INNER JOIN REGISTERED_TUTOR_EMAIL_ID RTE ON TM.TUTOR_SERIAL_ID = RTE.TUTOR_SERIAL_ID AND RTE.IS_PRIMARY = 'Y'
        INNER JOIN REGISTERED_TUTOR_CONTACT_NUMBER RTC ON TM.TUTOR_SERIAL_ID = RTC.TUTOR_SERIAL_ID AND RTC.IS_PRIMARY = 'Y'
		INNER JOIN ENQUIRY EN ON TM.ENQUIRY_SERIAL_ID = EN.ENQUIRY_SERIAL_ID
		INNER JOIN SUBSCRIBED_CUSTOMER C ON EN.CUSTOMER_SERIAL_ID = C.CUSTOMER_SERIAL_ID
		INNER JOIN SUBSCRIBED_CUSTOMER_EMAIL_ID SCE ON EN.CUSTOMER_SERIAL_ID = SCE.CUSTOMER_SERIAL_ID AND SCE.IS_PRIMARY = 'Y'
        INNER JOIN SUBSCRIBED_CUSTOMER_CONTACT_NUMBER SCC ON EN.CUSTOMER_SERIAL_ID = SCC.CUSTOMER_SERIAL_ID AND SCC.IS_PRIMARY = 'Y'
	</query>
	<query type="filter" id="tutorMapperTutorMapperSerialIdFilter">
		WHERE TM.TUTOR_MAPPER_SERIAL_ID = :tutorMapperSerialId
	</query>
	<query type="filter" id="tutorMapperMappingStatusFilter">
		WHERE TM.MAPPING_STATUS = :mappingStatus
	</query>
	<query type="filter" id="tutorMapperCurrentTutorMappingFilter">
		 WHERE TM.TUTOR_SERIAL_ID = :tutorSerialId
	</query>
	<query type="filter" id="tutorMapperCurrentCustomerMappingFilter">
		 WHERE C.CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
	<query type="filter" id="tutorMapperCurrentEnquiryAllMappedTutors">
		WHERE TM.ENQUIRY_SERIAL_ID = :enquirySerialId
	</query>
	<query type="filter" id="tutorMapperEnquiryClosedFilter">
		WHERE TM.IS_ENQUIRY_CLOSED = 'Y'
	</query>
	<query type="filter" id="tutorMapperEnquiryOpenAdditionalFilter">
		AND (TM.IS_ENQUIRY_CLOSED IS NULL OR TM.IS_ENQUIRY_CLOSED &lt;&gt; 'Y')
	</query>
	<query type="sorter" id="tutorMapperEntryDateSorter">
		ORDER BY ENTRY_DATE_MILLIS
	</query>
	<query type="insert" id="insertTutorMapper" paramClass="com.model.components.TutorMapper">
		INSERT INTO TUTOR_MAPPER
			(TUTOR_MAPPER_SERIAL_ID, ENQUIRY_SERIAL_ID, TUTOR_SERIAL_ID, MAPPING_STATUS, WHO_ACTED, IS_DEMO_SCHEDULED, ADMIN_ACTION_DATE_MILLIS, ENTRY_DATE_MILLIS) 
		VALUES
			(:tutorMapperSerialId, :enquirySerialId, :tutorSerialId, :mappingStatus, :whoActed, :isDemoScheduled, :adminActionDateMillis, :entryDateMillis)
	</query>
	<query type="delete" id="deleteTutorMapper" paramClass="com.model.components.TutorMapper">
		DELETE FROM TUTOR_MAPPER WHERE TUTOR_MAPPER_SERIAL_ID = :tutorMapperSerialId
	</query>
	<query type="update" id="updateTutorMapperMappingStatus" paramClass="com.model.components.TutorMapper">
		UPDATE TUTOR_MAPPER SET
			MAPPING_STATUS = :mappingStatus, 
			WHO_ACTED = :whoActed, 
			ADMIN_ACTION_DATE_MILLIS = :adminActionDateMillis, 
			ADMIN_ACTION_REMARKS = :adminActionRemarks 
		WHERE TUTOR_MAPPER_SERIAL_ID = :tutorMapperSerialId
	</query>
	<query type="update" id="updateTutorMapperForDemoScheduled" paramClass="com.model.components.TutorMapper">
		UPDATE TUTOR_MAPPER SET 
			IS_DEMO_SCHEDULED 			= :isDemoScheduled, 
			MAPPING_STATUS 				= :mappingStatus, 
			ADMIN_ACTION_DATE_MILLIS 	= :adminActionDateMillis, 
			WHO_ACTED 					= :whoActed 
		WHERE TUTOR_MAPPER_SERIAL_ID 	= :tutorMapperSerialId
	</query>
	<query type="update" id="updateTutorMapperEnquiryClosedForEnquiryIdList">
		UPDATE TUTOR_MAPPER SET
			IS_ENQUIRY_CLOSED = :isEnquiryClosed, 
			ENQUIRY_CLOSED_MILLIS = :enquiryClosedMillis
		WHERE ENQUIRY_SERIAL_ID IN (:enquirySerialIdList)
	</query>
	<query type="update" id="updateTutorMapperEnquiryClosedForEnquiryMatchStatusList">
		UPDATE TUTOR_MAPPER SET
			IS_ENQUIRY_CLOSED = :isEnquiryClosed, 
			ENQUIRY_CLOSED_MILLIS = :enquiryClosedMillis
		WHERE ENQUIRY_SERIAL_ID IN (SELECT ENQUIRY_SERIAL_ID FROM ENQUIRY WHERE MATCH_STATUS IN (:matchStatusList))
		AND (IS_ENQUIRY_CLOSED IS NULL OR IS_ENQUIRY_CLOSED &lt;&gt; 'Y')
	</query>
	<query type="select" id="selectTutorMapperCountForEnquirySerialId">
		SELECT COUNT(1) TOTAL_MAPPED_TUTORS FROM TUTOR_MAPPER WHERE ENQUIRY_SERIAL_ID = :enquirySerialId
	</query>
</queryMapper>