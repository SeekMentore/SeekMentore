<?xml version="1.0" encoding="UTF-8"?>
<queryMapper namespace="sales-demo">
	<query type="select" id="selectDemo">
		SELECT
			D.*, 
			C.CUSTOMER_ID AS CUSTOMER_ID,
			C.NAME AS CUSTOMER_NAME, 
			C.EMAIL_ID AS CUSTOMER_EMAIL, 
			C.CONTACT_NUMBER AS CUSTOMER_CONTACT_NUMBER,
			T.TUTOR_ID AS TUTOR_ID,
			T.NAME AS TUTOR_NAME, 
			T.EMAIL_ID AS TUTOR_EMAIL, 
			T.CONTACT_NUMBER AS TUTOR_CONTACT_NUMBER, 
			EN.ENQUIRY_ID AS ENQUIRY_ID,
			EN.SUBJECT AS ENQUIRY_SUBJECT,  
			EN.GRADE AS ENQUIRY_GRADE, 
			EN.LOCATION_DETAILS AS ENQUIRY_LOCATION,  
			EN.PREFERRED_TEACHING_TYPE AS ENQUIRY_PREFERRED_TEACHING_TYPE, 
			EN.QUOTED_CLIENT_RATE AS ENQUIRY_QUOTED_CLIENT_RATE,
			EN.NEGOTIATED_RATE_WITH_CLIENT AS ENQUIRY_NEGOTIATED_RATE_WITH_CLIENT,
			EN.CLIENT_NEGOTIATION_REMARKS AS ENQUIRY_CLIENT_NEGOTIATION_REMARKS,
			TM.QUOTED_TUTOR_RATE AS TUTOR_MAPPER_QUOTED_TUTOR_RATE,
			TM.NEGOTIATED_RATE_WITH_TUTOR AS TUTOR_MAPPER_NEGOTIATED_RATE_WITH_TUTOR,
			TM.TUTOR_NEGOTIATION_REMARKS AS TUTOR_MAPPER_TUTOR_NEGOTIATION_REMARKS,
			IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = D.WHO_ACTED), D.WHO_ACTED) AS WHO_ACTED_NAME 
			FROM DEMO_TRACKER D
			INNER JOIN TUTOR_MAPPER TM ON D.TUTOR_MAPPER_ID = TM.TUTOR_MAPPER_ID
			INNER JOIN REGISTERED_TUTOR T ON TM.TUTOR_ID = T.TUTOR_ID
			INNER JOIN ENQUIRIES EN ON TM.ENQUIRY_ID = EN.ENQUIRY_ID 
			INNER JOIN SUBSCRIBED_CUSTOMER C ON EN.CUSTOMER_ID = C.CUSTOMER_ID
	</query>
	<query type="filter" id="demoExistingFilter">
		WHERE D.DEMO_STATUS = :demoStatus
	</query>
	<query type="filter" id="demoCurrentTutorAdditionalFilter">
		 AND TM.TUTOR_ID = :tutorId
	</query>
	<query type="filter" id="demoCurrentCustomerAdditionalFilter">
		 AND C.CUSTOMER_ID = :customerId
	</query>
	<query type="sorter" id="demoExistingSorter">
		ORDER BY ENTRY_DATE_MILLIS
	</query>
	<query type="insert" id="insertDemo" paramClass="com.model.components.Demo">
		INSERT INTO DEMO_TRACKER
			(TUTOR_MAPPER_ID, DEMO_DATE_AND_TIME_MILLIS, DEMO_STATUS, WHO_ACTED, ADMIN_ACTION_DATE_MILLIS, ENTRY_DATE_MILLIS) 
		VALUES
			(:tutorMapperId, :demoDateAndTimeMillis, :demoStatus, :whoActed, :adminActionDateMillis, :entryDateMillis)
	</query>
	<query type="insert" id="insertReScheduledDemo" paramClass="com.model.components.Demo">
		INSERT INTO DEMO_TRACKER
			(TUTOR_MAPPER_ID, DEMO_DATE_AND_TIME_MILLIS, DEMO_STATUS, WHO_ACTED, ADMIN_ACTION_DATE_MILLIS, ENTRY_DATE_MILLIS, RESCHEDULING_REMARKS, RE_SCHEDULE_COUNT) 
		VALUES
			(:tutorMapperId, :demoDateAndTimeMillis, :demoStatus, :whoActed, :adminActionDateMillis, :entryDateMillis, :reschedulingRemarks, :reScheduleCount)
	</query>
	<query type="update" id="updateDemo" paramClass="com.model.components.Demo">
		UPDATE DEMO_TRACKER SET
	</query>
	<query type="update" id="updateDemoStatus" paramClass="com.model.components.Demo">
		DEMO_STATUS = :demoStatus, WHO_ACTED = :userId, ADMIN_ACTION_DATE_MILLIS = (UNIX_TIMESTAMP(SYSDATE()) * 1000), ADMIN_FINALIZING_REMARKS = :remarks WHERE DEMO_TRACKER_ID = :demoTrackerId
	</query>
</queryMapper>