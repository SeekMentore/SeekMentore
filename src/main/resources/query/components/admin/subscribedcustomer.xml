<?xml version="1.0" encoding="UTF-8"?>
<queryMapper namespace="admin-subscribedcustomer">
	<query type="insert" id="insertSubscribedCustomer" paramClass="com.model.components.SubscribedCustomer">
		INSERT INTO SUBSCRIBED_CUSTOMER
			(CUSTOMER_SERIAL_ID, NAME, FIND_TUTOR_ID, STUDENT_GRADE, SUBJECTS, LOCATION, ADDRESS_DETAILS, ADDITIONAL_DETAILS, ENCRYPTED_PASSWORD, RECORD_LAST_UPDATED_MILLIS, UPDATED_BY, USER_ID, USER_TYPE) 
		VALUES
			(:customerSerialId, :name, :findTutorId, :studentGrades, :interestedSubjects, :location, :addressDetails, :additionalDetails, :encryptedPassword, :recordLastUpdatedMillis, :updatedBy, :userId, 'Customer')
	</query>
	<query type="select" id="selectSubscribedCustomer">
		SELECT
			C.*,
			SCE.EMAIL_ID AS EMAIL_ID,
			SCC.CONTACT_NUMBER AS CONTACT_NUMBER,
			IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = C.WHO_BLACKLISTED), C.WHO_BLACKLISTED) AS WHO_BLACKLISTED_NAME,
            IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = C.WHO_UN_BLACKLISTED), C.WHO_UN_BLACKLISTED) AS WHO_UN_BLACKLISTED_NAME,
			IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = C.UPDATED_BY), C.UPDATED_BY) AS UPDATED_BY_NAME
		FROM SUBSCRIBED_CUSTOMER C
		INNER JOIN SUBSCRIBED_CUSTOMER_EMAIL_ID SCE ON C.CUSTOMER_SERIAL_ID = SCE.CUSTOMER_SERIAL_ID AND SCE.IS_PRIMARY = 'Y'
        INNER JOIN SUBSCRIBED_CUSTOMER_CONTACT_NUMBER SCC ON C.CUSTOMER_SERIAL_ID = SCC.CUSTOMER_SERIAL_ID AND SCC.IS_PRIMARY = 'Y'
	</query>
	<query type="filter" id="subscribedCustomerUserIdFilter">
		WHERE LOWER(USER_ID) = LOWER(:userId)
	</query>
	<query type="filter" id="subscribedCustomerCustomerIdFilter">
		WHERE C.CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
	<query type="filter" id="subscribedCustomerEmailFilter">
		WHERE C.CUSTOMER_SERIAL_ID = (SELECT CUSTOMER_SERIAL_ID FROM SUBSCRIBED_CUSTOMER_EMAIL_ID WHERE EMAIL_ID = :emailId)
	</query>
	<query type="filter" id="subscribedCustomerContactNumberFilter">
		WHERE C.CUSTOMER_SERIAL_ID = (SELECT CUSTOMER_SERIAL_ID FROM SUBSCRIBED_CUSTOMER_CONTACT_NUMBER WHERE CONTACT_NUMBER = :contactNumber)
	</query>
	<query type="update" id="updateBlacklistSubscribedCustomer" paramClass="com.model.components.SubscribedCustomer">
		UPDATE SUBSCRIBED_CUSTOMER SET
			IS_BLACKLISTED = :isBlacklisted,
			BLACKLISTED_REMARKS = :blacklistedRemarks,
			BLACKLISTED_DATE_MILLIS = :blacklistedDateMillis,
			WHO_BLACKLISTED = :whoBlacklisted,
			RECORD_LAST_UPDATED_MILLIS = :recordLastUpdatedMillis,
			UPDATED_BY = :updatedBy
		WHERE CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
	<query type="update" id="updateUnBlacklistSubscribedCustomer" paramClass="com.model.components.SubscribedCustomer">
		UPDATE SUBSCRIBED_CUSTOMER SET
			IS_BLACKLISTED = :isBlacklisted,
			UN_BLACKLISTED_REMARKS = :unblacklistedRemarks,
			UN_BLACKLISTED_DATE_MILLIS = :unblacklistedDateMillis,
			WHO_UN_BLACKLISTED = :whoUnBlacklisted,
			RECORD_LAST_UPDATED_MILLIS = :recordLastUpdatedMillis,
			UPDATED_BY = :updatedBy
		WHERE CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
	<query type="update" id="updateSubscribedCustomerPassword" paramClass="com.model.components.SubscribedCustomer">
		UPDATE SUBSCRIBED_CUSTOMER SET 
			ENCRYPTED_PASSWORD = :encryptedPassword 
		WHERE USER_ID = :userId
	</query>
	<query type="insert" id="insertSubscribedCustomerEmail" paramClass="com.model.components.SubscribedCustomerEmail">
		INSERT INTO SUBSCRIBED_CUSTOMER_EMAIL_ID
			(SUBSCRIBED_CUSTOMER_EMAIL_ID_SERIAL_ID, CUSTOMER_SERIAL_ID, EMAIL_ID, IS_PRIMARY) 
		VALUES
			(:subscribedCustomerEmailIdSerialId, :customerSerialId, :emailId, :isPrimary)
	</query>
	<query type="select" id="selectSubscribedCustomerEmail">
		SELECT
            SCE.*
        FROM SUBSCRIBED_CUSTOMER_EMAIL_ID SCE
	</query>
	<query type="filter" id="subscribedCustomerEmailCustomerIdFilter">
		WHERE SCE.CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
	<query type="insert" id="insertSubscribedCustomerContactNumber" paramClass="com.model.components.SubscribedCustomerContactNumber">
		INSERT INTO SUBSCRIBED_CUSTOMER_CONTACT_NUMBER
			(SUBSCRIBED_CUSTOMER_CONTACT_NUMBER_SERIAL_ID, CUSTOMER_SERIAL_ID, CONTACT_NUMBER, IS_PRIMARY) 
		VALUES
			(:setSubscribedCustomerContactNumberSerialId, :customerSerialId, :contactNumber, :isPrimary)
	</query>
	<query type="select" id="selectSubscribedCustomerContactNumber">
		SELECT
            SCC.*
        FROM SUBSCRIBED_CUSTOMER_CONTACT_NUMBER SCC
	</query>
	<query type="filter" id="subscribedCustomerContactNumberCustomerIdFilter">
		WHERE SCC.CUSTOMER_SERIAL_ID = :customerSerialId
	</query>
</queryMapper>