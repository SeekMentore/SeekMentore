<?xml version="1.0" encoding="UTF-8"?>
<queryMapper namespace="admin-registeredtutor-bankdetail">
	<query type="select" id="selectBankDetail">
		SELECT
			B.*,
			IFNULL((SELECT NAME FROM EMPLOYEE E WHERE E.USER_ID = B.WHO_ACTED), B.WHO_ACTED) AS WHO_ACTED_NAME
		FROM BANK_DETAIL B
	</query>
	<query type="filter" id="bankDetailBankAccountIdilter">
		WHERE BANK_ACCOUNT_ID = :bankAccountId
	</query>
	<query type="filter" id="bankDetailMultiBankAccountIdFilter">
		WHERE BANK_ACCOUNT_ID IN (:bankAccountIdList)
	</query>
	<query type="filter" id="bankdetailTutorIdFilter">
		WHERE TUTOR_ID = :tutorId
	</query>
	<query type="sorter" id="bankdetailExistingSorter">
		ORDER BY BANK_NAME
	</query>
	<query type="update" id="updateTakeActionBankDetail" paramClass="com.model.components.BankDetail">
		UPDATE BANK_DETAIL SET
			IS_APPROVED = :isApproved,
			WHO_ACTED = :whoActed,
			REMARKS = :remarks,
			ACTION_DATE_MILLIS = :actionDateMillis
		WHERE BANK_ACCOUNT_ID = :bankAccountId
	</query>
	<query type="update" id="updateMakeDefaultBankDetail" paramClass="com.model.components.BankDetail">
		UPDATE BANK_DETAIL SET
			IS_DEFAULT = :isDefault,
			WHO_ACTED = :whoActed,
			REMARKS = :remarks,
			ACTION_DATE_MILLIS = :actionDateMillis
		WHERE BANK_ACCOUNT_ID = :bankAccountId
	</query>
	<query type="update" id="resetPreviousDefaultBankAccount" paramClass="com.model.components.BankDetail">
		UPDATE BANK_DETAIL SET IS_DEFAULT = 'N' WHERE TUTOR_ID = :tutorId AND IS_DEFAULT = 'Y'
	</query>
</queryMapper>